{"Protocols/FutureType.html#/s:6Futura10FutureTypeP11ExpectationQa":{"name":"Expectation","abstract":"<p>This future&rsquo;s expected value type.</p>","parent_name":"FutureType"},"Protocols/FutureType.html#/s:6Futura10FutureTypeP5stateAA0B5StateOvp":{"name":"state","abstract":"<p>State of the FutureType</p>","parent_name":"FutureType"},"Protocols/FutureType.html#/s:6Futura10FutureTypeP5value11ExpectationQzSgvp":{"name":"value","abstract":"<p>Value of the resolved future, or nil if unresolved</p>","parent_name":"FutureType"},"Protocols/FutureType.html#/s:6Futura10FutureTypeP4then2on_AA0B0Cy11ExpectationQzGSo17OS_dispatch_queueC_yAIctF":{"name":"then(on:_:)","abstract":"<p>Abstract thenable behavior</p>","parent_name":"FutureType"},"Protocols/FutureType.html":{"name":"FutureType","abstract":"<p>Abstract Future type implemented by Future<T></p>"},"Functions.html#/s:6Futura4raceyAA6FutureCyAA6EitherOyxq_GGADyxG_ADyq_Gtr0_lF":{"name":"race(_:_:)","abstract":"<p>Races two Futures of different types</p>"},"Functions.html#/s:6Futura4raceyAA6FutureCyypGADyxG_ADyq_GADyq0_Gtr1_lF":{"name":"race(_:_:_:)","abstract":"<p>Races three Futures of different types</p>"},"Functions.html#/s:6Futura3zipyAA6FutureCyx_q_tGADyxG_ADyq_Gtr0_lF":{"name":"zip(_:_:)","abstract":"<p>Zips the results of two futures of different types into a tuple of two elements</p>"},"Functions.html#/s:6Futura3zipyAA6FutureCyx_q_q0_tGADyxG_ADyq_GADyq0_Gtr1_lF":{"name":"zip(_:_:_:)","abstract":"<p>Zips the results of three futures of different types into a tuple of three elements</p>"},"Extensions/Collection.html#/s:Sl6FuturaAA10FutureType7ElementRpzrlE14firstCompleted2onAA0B0CyAC_11ExpectationQZGSo17OS_dispatch_queueC_tF":{"name":"firstCompleted(on:)","abstract":"<p>Extension on a collection of Futures analagous to <code>race</code></p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl6FuturaAA10FutureType7ElementRpzrlE7flatten2onAA0B0CySayAC_11ExpectationQZGGSo17OS_dispatch_queueC_tF":{"name":"flatten(on:)","abstract":"<p>Extension on collection of Futures analogous to <code>all</code>, turning an array of futures into a single Future object with an array of the resolved values</p>","parent_name":"Collection"},"Extensions/Collection.html":{"name":"Collection"},"Enums/FutureError.html#/s:6Futura11FutureErrorO9emptyRaceyA2CmF":{"name":"emptyRace","abstract":"<p>Undocumented</p>","parent_name":"FutureError"},"Enums/FutureError.html#/s:6Futura11FutureErrorO7timeoutyA2CmF":{"name":"timeout","abstract":"<p>Undocumented</p>","parent_name":"FutureError"},"Enums/FutureError.html#/s:6Futura11FutureErrorO16validationFailedyA2CmF":{"name":"validationFailed","abstract":"<p>Undocumented</p>","parent_name":"FutureError"},"Enums/FutureError.html#/s:6Futura11FutureErrorO21invalidWrapParametersyA2CmF":{"name":"invalidWrapParameters","abstract":"<p>Undocumented</p>","parent_name":"FutureError"},"Enums/FutureState.html#/s:6Futura11FutureStateO8resolvedyA2CmF":{"name":"resolved","abstract":"<p>Undocumented</p>","parent_name":"FutureState"},"Enums/FutureState.html#/s:6Futura11FutureStateO8rejectedyA2CmF":{"name":"rejected","abstract":"<p>Undocumented</p>","parent_name":"FutureState"},"Enums/FutureState.html#/s:6Futura11FutureStateO7pendingyA2CmF":{"name":"pending","abstract":"<p>Undocumented</p>","parent_name":"FutureState"},"Enums/Either.html#/s:6Futura6EitherO4LeftyACyxq_GxcAEmr0_lF":{"name":"Left(_:)","abstract":"<p>Undocumented</p>","parent_name":"Either"},"Enums/Either.html#/s:6Futura6EitherO5RightyACyxq_Gq_cAEmr0_lF":{"name":"Right(_:)","abstract":"<p>Undocumented</p>","parent_name":"Either"},"Enums/Either.html":{"name":"Either","abstract":"<p>Functional enum to represent a binary option</p>"},"Enums/FutureState.html":{"name":"FutureState","abstract":"<p>An enum representing the possible states of a promise</p>"},"Enums/FutureError.html":{"name":"FutureError","abstract":"<p>Errors throw by the Futura library</p>"},"Classes/Promise.html#/s:6Futura7PromiseC12futureResultAA6FutureCyxGvp":{"name":"futureResult","abstract":"<p>Underlying, immutable Future</p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseCACyxGycfc":{"name":"init()","abstract":"<p>Empty initializer</p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseC2on_ACyxGSo17OS_dispatch_queueC_yyxc_ys5Error_pctKctcfc":{"name":"init(on:_:)","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseC5valueACyxGx_tcfc":{"name":"init(value:)","abstract":"<p>Initialize an already resolved promise with a value</p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseC5errorACyxGs5Error_p_tcfc":{"name":"init(error:)","abstract":"<p>Initialize an already resolved promise with an error</p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseC7resolve5valueyx_tF":{"name":"resolve(value:)","abstract":"<p>Complete the Future successfully with an associated value</p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseC6reject5errorys5Error_p_tF":{"name":"reject(error:)","abstract":"<p>Complete the Future erroneously with an associated error</p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseCAAytRszlE4doneACyytGyFZ":{"name":"done()","abstract":"<p>Convenience function to create a completed Promise<Void></p>","parent_name":"Promise"},"Classes/Promise.html#/s:6Futura7PromiseCAAytRszlE7resolveyyF":{"name":"resolve()","abstract":"<p>Convenience function to resolve a Promise<Void></p>","parent_name":"Promise"},"Classes/Future.html#/s:6Futura6FutureC11Expectationa":{"name":"Expectation","abstract":"<p>Generic value type</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC5stateAA0B5StateOvp":{"name":"state","abstract":"<p>Current state of the Promise</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC5valuexSgvp":{"name":"value","abstract":"<p>Convenience accessor for the associated value of the future</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC5errors5Error_pSgvp":{"name":"error","abstract":"<p>Convenience accessor for the associated error of the future</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC4then2on_ACyxGSo17OS_dispatch_queueC_yxctF":{"name":"then(on:_:)","abstract":"<p>Execute a closure upon successful completion of the future</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC5catch2on_ACyxGSo17OS_dispatch_queueC_ys5Error_pctF":{"name":"catch(on:_:)","abstract":"<p>Execute a closure upon unsuccessful completion of the promise</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC6alwaysyACyxGyycF":{"name":"always(_:)","abstract":"<p>Execute a closure on completion of promise in both fulfilled and error states</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC2do2on_ACyxGSo17OS_dispatch_queueC_yxKctF":{"name":"do(on:_:)","abstract":"<p>Injects an action into the Future sequence without affecting the callback chain, unless the side effect throws an error</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC7flatMap2on_ACyqd__GSo17OS_dispatch_queueC_AFxKctlF":{"name":"flatMap(on:_:)","abstract":"<p>Chains promise objects together</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC3mapyACyqd__Gqd__xKclF":{"name":"map(_:)","abstract":"<p>Maps the underlying type in the Promise object</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC4raceyACyxGSayAEGFZ":{"name":"race(_:)","abstract":"<p>Returns the first Future resolved in an array of Futures</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC4raceyACyxGAEd_tFZ":{"name":"race(_:)","abstract":"<p>Variadic implemention of <code>race</code></p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC7recoveryACyxGAEs5Error_pKcF":{"name":"recover(_:)","abstract":"<p>Recovers a failed Future object</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC5retry8attempts5delay0C4BodyACyqd__GSi_SdAHyctlF":{"name":"retry(attempts:delay:retryBody:)","abstract":"<p>Catches a failed Future and executes a retry block</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC5delayyACyxGSdF":{"name":"delay(_:)","abstract":"<p>Delays the Future for a defined amount of time</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC7timeoutyACyxGSdF":{"name":"timeout(_:)","abstract":"<p>Undocumented</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC8validateyACyxGSbxKcF":{"name":"validate(_:)","abstract":"<p>Validates the value of a successfully resolved Future, and rejects the chain if validation does not pass</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC3allyACySayqd__GGSayACyqd__GGlFZ":{"name":"all(_:)","abstract":"<p>Resolve multiple futures of the same type into a single future returning an array of the fulfilled values</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC3allyACySayqd__GGACyqd__Gd_tlFZ":{"name":"all(_:)","abstract":"<p>Variadic implemention of resolving all futures</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC4wrap10completionACyqd__Gyyqd__Sg_s5Error_pSgtcc_tlFZ":{"name":"wrap(completion:)","abstract":"<p>Wraps a completion handler of (T?, Error?) -&gt; Void into a Future</p>","parent_name":"Future"},"Classes/Future.html#/s:6Futura6FutureC4wrap10completionACyqd__Gyys6ResultOyqd__s5Error_pGcc_tlFZ":{"name":"wrap(completion:)","abstract":"<p>Wraps a Result style completion handler</p>","parent_name":"Future"},"Classes/Future.html":{"name":"Future","abstract":"<p>Generic class for a Future</p>"},"Classes/Promise.html":{"name":"Promise","abstract":"<p>A representation of a Promise with completion callbacks</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}